{"version":3,"sources":["images/logo.jpg","components/nav.js","pages/welcome.js","components/intro.js","components/progress.js","components/question.js","components/answerLayout.js","components/answers.js","questionsAPI/numbersQuestions.js","pages/numbers.js","questionsAPI/addSubtractQuestions.js","pages/additionAndSubtraction.js","questionsAPI/multiplyDivideQuestions.js","pages/multiplicationAndDivision.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","React","useState","isActive","setisActive","class","role","aria-label","src","require","width","height","onClick","className","aria-expanded","data-target","aria-hidden","id","to","Welcome","Intro","Progress","props","current","total","Question","question","AnswerLayout","classStyle","selected","push","value","options","join","handleClick","answer","Answers","answer_a","currentAnswer","answer_b","answer_c","answer_d","numbersQuestions","correct_answer","Numbers","currentQuestion","setCurrentQuestion","setCurrentAnswer","answers","setAnswers","error","setError","showResults","setShowResults","map","find","questionId","key","resultMark","length","e","target","noClick","addSubtractQuestions","AdditionAndSubtraction","multiplyDivideQuestions","MultiplicationAndDivision","App","path","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eded43c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5f39ad2e.jpg\";","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Nav() {\r\n    const [isActive, setisActive] = React.useState(false);\r\n    \r\n    return (\r\n        <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div class=\"navbar-brand\">\r\n                <img src = {require(\"../images/logo.jpg\")} width=\"35px\" height=\"18px\"/> FUN MATHS\r\n                \r\n\r\n                <div\r\n                    onClick={() => {\r\n                    setisActive(!isActive);\r\n                    }}\r\n                    role=\"button\"\r\n                    className={`navbar-burger burger ${isActive ? \"is-active\" : \"\"}`}\r\n                    aria-label=\"menu\"\r\n                    aria-expanded=\"false\"\r\n                    data-target=\"navbarBasicExample\"\r\n                >\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div\r\n            id=\"navbarBasicExample\"\r\n            className={`navbar-menu ${isActive ? \"is-active\" : \"\"}`}\r\n            >\r\n\r\n                <div className=\"navbar-start\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/' className=\"nav-link\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/numbers-to-1000' className=\"nav-link\">Numbers to 1000</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/addition-and-subtraction' className=\"nav-link\">Addition and Subtraction</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to='/multiplication-and-division' className=\"nav-link\">Multiplication and Division</Link>\r\n                    </li>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default function Welcome()\r\n{\r\n    return (\r\n        <>\r\n            <h1>Welcome!</h1>\r\n            <h2>\r\n                Revise what you have learnt with this online quiz.<br/>\r\n                Click each topic for the different quizes.<br/>\r\n                Each topic has 10 multiple choice questions.<br/>\r\n                Remember!<br/>\r\n                Do not rush through the questions and do your best!\r\n            </h2>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Intro() {\r\n    return(\r\n        <h2>\r\n            Read each question carefully.\r\n            Select your answer and click on the Confirm button to go to the next question.\r\n            At the end of the quiz, you will see which questions you got correct and which you got wrong.\r\n            Restart the quiz to try to answer all the questions correctly.\r\n        </h2>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nexport default function Progress(props) {\r\n    return(\r\n        <h3>\r\n            Question {props.current} of {props.total}\r\n        </h3>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nexport default function Question(props) {\r\n    return(\r\n        <h1>\r\n            {props.question}\r\n        </h1>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nexport default function AnswerLayout(props) {\r\n    let classStyle = ['answer'];\r\n\r\n    if (props.selected) {\r\n        classStyle.push('selected');\r\n    }\r\n\r\n    return(\r\n        <button value = {props.options} className={classStyle.join(' ')} onClick={props.handleClick}>\r\n            <span className=\"options\">{props.options}.</span> {props.answer}\r\n        </button>\r\n    );\r\n\r\n}","import React from 'react';\r\n\r\nimport AnswerLayout from \"./answerLayout.js\"\r\n\r\nexport default function Answers(props) {\r\n    return(\r\n        <>\r\n            <AnswerLayout options=\"a\" answer={props.question.answer_a} handleClick={props.handleClick} selected={props.currentAnswer === 'a'}/>\r\n            <AnswerLayout options=\"b\" answer={props.question.answer_b} handleClick={props.handleClick} selected={props.currentAnswer === 'b'}/>\r\n            <AnswerLayout options=\"c\" answer={props.question.answer_c} handleClick={props.handleClick} selected={props.currentAnswer === 'c'}/>\r\n            <AnswerLayout options=\"d\" answer={props.question.answer_d} handleClick={props.handleClick} selected={props.currentAnswer === 'd'}/>\r\n        </>\r\n    );\r\n\r\n}","export const numbersQuestions = [\r\n    {\r\n        id: 1,\r\n        question: 'What is 1 thousands, 3 hundreds, 2 tens and 9 ones?',\r\n        answer_a:'1239',\r\n        answer_b: '1329',\r\n        answer_c: \"1932\",\r\n        answer_d: '2913',\r\n        correct_answer: 'b',\r\n    },\r\n    {\r\n        id: 2,\r\n        question: 'What is the value of the number 5 in 6859',\r\n        answer_a: '5',\r\n        answer_b: '500',\r\n        answer_c: '50',\r\n        answer_d: '5000',\r\n        correct_answer: 'c',\r\n    },\r\n    {\r\n        id: 3,\r\n        question: 'What is five thousand, six hundred and thrity-five in numbers?',\r\n        answer_a: '5635',\r\n        answer_b: '535',\r\n        answer_c: '5630',\r\n        answer_d: '5431',\r\n        correct_answer: 'a',\r\n    },\r\n  ];\r\n   \r\n  export default {numbersQuestions};","import React, {useState} from 'react';\r\n\r\nimport Intro from \"../components/intro.js\"\r\nimport Progress from \"../components/progress.js\"\r\nimport Question from \"../components/question.js\"\r\nimport Answers from \"../components/answers.js\"\r\nimport {numbersQuestions} from \"../questionsAPI/numbersQuestions.js\"\r\n\r\nimport '../App.css';\r\n\r\nfunction Numbers() {\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [currentAnswer, setCurrentAnswer] = useState('');\r\n  const [answers, setAnswers] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  const question = numbersQuestions[currentQuestion];\r\n  \r\n  const handleClick = e => {\r\n      setCurrentAnswer(e.target.value);\r\n      setError('');\r\n  };\r\n\r\n  const noClick = () => {\r\n    if (error) {\r\n      return <div className=\"error\">{error}</div>;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  const confirmButton = () => {\r\n    const answer = {questionId: question.id, answer: currentAnswer};\r\n\r\n    if (!currentAnswer) {\r\n      setError(\"You didn't click an answer!\");\r\n      return;\r\n    }\r\n\r\n    answers.push(answer);\r\n    setAnswers(answers);\r\n    setCurrentAnswer('');\r\n\r\n    if (currentQuestion + 1 < numbersQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      return;\r\n    }\r\n\r\n    setShowResults(true);\r\n  };\r\n\r\n  const restart = () => {\r\n    setAnswers([]);\r\n    setCurrentAnswer('');\r\n    setCurrentQuestion(0);\r\n    setShowResults(false);\r\n  }\r\n\r\n  const resultMark =  (question, answer) => {\r\n    if (question.correct_answer === answer.answer) {\r\n      return <span className = \"correct\">Correct</span>\r\n    } else {\r\n      return <span className = \"incorrect\">Incorrect</span>\r\n    }\r\n  }\r\n\r\n  const resultsTotal = () => {\r\n    return answers.map ( answer => {\r\n      const question = numbersQuestions.find(\r\n        question => question.id === answer.questionId\r\n      );\r\n\r\n      return <div key = {question.id}> {question.question} - {resultMark(question, answer)}</div>\r\n    });\r\n  };\r\n\r\n  if (showResults) {\r\n    return (\r\n      <div className=\"container results\">\r\n        <h2>Results</h2>\r\n        <ul>{resultsTotal()}</ul>\r\n        <button className=\"submit\" onClick={restart}>Restart Quiz</button>\r\n      </div>\r\n    )\r\n\r\n\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <Intro/>\r\n        <Progress total={numbersQuestions.length} current={currentQuestion + 1}/>\r\n        <Question question={question.question}/>\r\n        <Answers question ={question} currentAnswer={currentAnswer} handleClick={handleClick}/>\r\n        {noClick()}\r\n        <button className=\"submit\" onClick={confirmButton}>Confirm</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Numbers;\r\n","export const addSubtractQuestions = [\r\n    {\r\n        id: 1,\r\n        question: 'What is 1000 + 3456?',\r\n        answer_a:'1 3456',\r\n        answer_b: '4456',\r\n        answer_c: \"3556\",\r\n        answer_d: '3566',\r\n        correct_answer: 'b',\r\n    },\r\n    {\r\n        id: 2,\r\n        question: 'What is 5793 +  4016 ?',\r\n        answer_a: '9809',\r\n        answer_b: '8099',\r\n        answer_c: '8899',\r\n        answer_d: '1779',\r\n        correct_answer: 'a',\r\n    },\r\n    {\r\n        id: 3,\r\n        question: 'What is 5050 - 15?',\r\n        answer_a: '0',\r\n        answer_b: '5065',\r\n        answer_c: '4900',\r\n        answer_d: '5035',\r\n        correct_answer: 'd',\r\n    },\r\n  ];\r\n   \r\n  export default {addSubtractQuestions};","import React, {useState} from 'react';\r\n\r\nimport Intro from \"../components/intro.js\"\r\nimport Progress from \"../components/progress.js\"\r\nimport Question from \"../components/question.js\"\r\nimport Answers from \"../components/answers.js\"\r\nimport {addSubtractQuestions} from \"../questionsAPI/addSubtractQuestions\"\r\n\r\nimport '../App.css';\r\n\r\nfunction AdditionAndSubtraction() {\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [currentAnswer, setCurrentAnswer] = useState('');\r\n  const [answers, setAnswers] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  const question = addSubtractQuestions[currentQuestion];\r\n  \r\n  const handleClick = e => {\r\n      setCurrentAnswer(e.target.value);\r\n      setError('');\r\n  };\r\n\r\n  const noClick = () => {\r\n    if (error) {\r\n      return <div className=\"error\">{error}</div>;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  const confirmButton = () => {\r\n    const answer = {questionId: question.id, answer: currentAnswer};\r\n\r\n    if (!currentAnswer) {\r\n      setError(\"You didn't click an answer!\");\r\n      return;\r\n    }\r\n\r\n    answers.push(answer);\r\n    setAnswers(answers);\r\n    setCurrentAnswer('');\r\n\r\n    if (currentQuestion + 1 < addSubtractQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      return;\r\n    }\r\n\r\n    setShowResults(true);\r\n  };\r\n\r\n  const restart = () => {\r\n    setAnswers([]);\r\n    setCurrentAnswer('');\r\n    setCurrentQuestion(0);\r\n    setShowResults(false);\r\n  }\r\n\r\n  const resultMark =  (question, answer) => {\r\n    if (question.correct_answer === answer.answer) {\r\n      return <span className = \"correct\">Correct</span>\r\n    } else {\r\n      return <span className = \"incorrect\">Incorrect</span>\r\n    }\r\n  }\r\n\r\n  const resultsTotal = () => {\r\n    return answers.map ( answer => {\r\n      const question = addSubtractQuestions.find(\r\n        question => question.id === answer.questionId\r\n      );\r\n\r\n      return <div key = {question.id}> {question.question} - {resultMark(question, answer)}</div>\r\n    });\r\n  };\r\n\r\n  if (showResults) {\r\n    return (\r\n      <div className=\"container results\">\r\n        <h2>Results</h2>\r\n        <ul>{resultsTotal()}</ul>\r\n        <button className=\"submit\" onClick={restart}>Restart Quiz</button>\r\n      </div>\r\n    )\r\n\r\n\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <Intro/>\r\n        <Progress total={addSubtractQuestions.length} current={currentQuestion + 1}/>\r\n        <Question question={question.question}/>\r\n        <Answers question ={question} currentAnswer={currentAnswer} handleClick={handleClick}/>\r\n        {noClick()}\r\n        <button className=\"submit\" onClick={confirmButton}>Confirm</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdditionAndSubtraction;","export const multiplyDivideQuestions = [\r\n    {\r\n        id: 1,\r\n        question: 'What is 1 x 1?',\r\n        answer_a:'5',\r\n        answer_b: '1',\r\n        answer_c: \"0\",\r\n        answer_d: 'None of the above',\r\n        correct_answer: 'b',\r\n    },\r\n    {\r\n        id: 2,\r\n        question: 'Complete the equation:  5 _ 6 = 30',\r\n        answer_a: '+',\r\n        answer_b: '-',\r\n        answer_c: 'x',\r\n        answer_d: '/',\r\n        correct_answer: 'c',\r\n    },\r\n    {\r\n        id: 3,\r\n        question: 'What is 50 / 10?',\r\n        answer_a: '40',\r\n        answer_b: '20',\r\n        answer_c: '60',\r\n        answer_d: '5',\r\n        correct_answer: 'd',\r\n    },\r\n  ];\r\n   \r\n  export default {multiplyDivideQuestions};","import React, {useState} from 'react';\r\n\r\nimport Intro from '../components/intro.js';\r\nimport Progress from \"../components/progress.js\"\r\nimport Question from \"../components/question.js\"\r\nimport Answers from \"../components/answers.js\"\r\nimport {multiplyDivideQuestions} from \"../questionsAPI/multiplyDivideQuestions.js\"\r\n\r\nimport '../App.css';\r\n\r\nfunction MultiplicationAndDivision() {\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [currentAnswer, setCurrentAnswer] = useState('');\r\n  const [answers, setAnswers] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  const question = multiplyDivideQuestions[currentQuestion];\r\n  \r\n  const handleClick = e => {\r\n      setCurrentAnswer(e.target.value);\r\n      setError('');\r\n  };\r\n\r\n  const noClick = () => {\r\n    if (error) {\r\n      return <div className=\"error\">{error}</div>;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  const confirmButton = () => {\r\n    const answer = {questionId: question.id, answer: currentAnswer};\r\n\r\n    if (!currentAnswer) {\r\n      setError(\"You didn't click an answer!\");\r\n      return;\r\n    }\r\n\r\n    answers.push(answer);\r\n    setAnswers(answers);\r\n    setCurrentAnswer('');\r\n\r\n    if (currentQuestion + 1 < multiplyDivideQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      return;\r\n    }\r\n\r\n    setShowResults(true);\r\n  };\r\n\r\n  const restart = () => {\r\n    setAnswers([]);\r\n    setCurrentAnswer('');\r\n    setCurrentQuestion(0);\r\n    setShowResults(false);\r\n  }\r\n\r\n  const resultMark =  (question, answer) => {\r\n    if (question.correct_answer === answer.answer) {\r\n      return <span className = \"correct\">Correct</span>\r\n    } else {\r\n      return <span className = \"incorrect\">Incorrect</span>\r\n    }\r\n  }\r\n\r\n  const resultsTotal = () => {\r\n    return answers.map ( answer => {\r\n      const question = multiplyDivideQuestions.find(\r\n        question => question.id === answer.questionId\r\n      );\r\n\r\n      return <div key = {question.id}> {question.question} - {resultMark(question, answer)}</div>\r\n    });\r\n  };\r\n\r\n  if (showResults) {\r\n    return (\r\n      <div className=\"container results\">\r\n        <h2>Results</h2>\r\n        <ul>{resultsTotal()}</ul>\r\n        <button className=\"submit\" onClick={restart}>Restart Quiz</button>\r\n      </div>\r\n    )\r\n\r\n\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <Intro/>\r\n        <Progress total={multiplyDivideQuestions.length} current={currentQuestion + 1}/>\r\n        <Question question={question.question}/>\r\n        <Answers question ={question} currentAnswer={currentAnswer} handleClick={handleClick}/>\r\n        {noClick()}\r\n        <button className=\"submit\" onClick={confirmButton}>Confirm</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiplicationAndDivision;","import React from 'react';\r\nimport 'bulma/css/bulma.css'\r\n\r\nimport Nav from \"./components/nav.js\"\r\nimport Welcome from \"./pages/welcome.js\"\r\nimport Numbers from \"./pages/numbers.js\"\r\nimport AdditionAndSubtraction from \"./pages/additionAndSubtraction.js\"\r\nimport MultiplicationAndDivision from \"./pages/multiplicationAndDivision.js\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n}\r\nfrom \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"container\">\r\n            <Router>\r\n                <Nav/>\r\n                <Switch>\r\n                \r\n                <Route path='/numbers-to-1000'>\r\n                    <Numbers/>\r\n                </Route>\r\n                \r\n                <Route path='/addition-and-subtraction'>\r\n                    <AdditionAndSubtraction/>\r\n                </Route>\r\n                \r\n                <Route path='/multiplication-and-division'>\r\n                    <MultiplicationAndDivision/>\r\n                </Route>\r\n                \r\n                <Route path='/'>\r\n                    <Welcome/>\r\n                </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}